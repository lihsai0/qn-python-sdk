on: [push]
name: Run Test Cases
jobs:
  test-win:
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python_version: ['3.8']
    runs-on: windows-2019
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge
          python-version: ${{ matrix.python_version }}
          activate-environment: qiniu-sdk
          auto-activate-base: false
      - name: Setup mock server
        shell: pwsh -noexit -command ". {0}"
        run: |
          conda create -y -n mock-server python=3.10
          conda activate mock-server
          python --version
          $processOptions = @{
            FilePath="python"
            ArgumentList="tests/mock_server/main.py", "--port", "9000"
            PassThru=$true
            RedirectStandardOutput="py-mock-server.log"
            RedirectStandardError="py-mock-server-err.log"
          }
          $mocksrvp = Start-Process @processOptions
          $mocksrvp.Id | Out-File -FilePath "mock-server.pid"
          Write-Host -Object $mocksrvp
          conda deactivate
      - name: Test mock server
        run: |
          Try {
            Invoke-WebRequest "http://127.0.0.1:9000/echo?status=200"
          } Catch {
            Write-Host -Object $_
          }
      - name: Post Setup mock server
        if: ${{ always() }}
        run: |
          Try {
            $mocksrvpid = Get-Content -Path "mock-server.pid"
            Stop-Process -Id $mocksrvpid
            Remove-Item -Path "mock-server.pid"
          } Catch {
            Write-Host -Object $_
          }
      - name: Print mock server log
        run: |
          Get-Content -Path "py-mock-server.log" | Write-Host
          Get-Content -Path "py-mock-server-err.log" | Write-Host
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
